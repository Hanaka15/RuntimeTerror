Combining tables into models to reduce joins later because we can nest data. Questions in quizes, Answers in participants each. 

Change and fix the controllers for all the diffrent paths to work with the new structure. we can completely remove quiz and instead combine them into a put method to edit the whole object. 

For questions we can make a post to submit new questios and push it into the questios array of the participant. We can mark it as complete using a virtual using the length of the answers array of the participant compared to the length of the questions array of the study we are responding to.

To solve authentication we can make the logic as follows. the user has access to dashboard but when trying to go there we need to pull data. we can use this to check if the user can pull the data and if not we try to refresh their access token. if the refresh fails we return them to login. 

We can move the token logic to a middleware. This will move some of the logic from the controller to the middleware instead. Find examples online...

We need to create the frontend for handling the creation of questions. 

We still create a junction to handle connections between researchers and quizzes but we can remove works spaces. 